# 0.导入需要的包和模块
from PyQt5.Qt import *  # 主要包含了我们常用的一些类
import sys

# sys.argv:当别人通过命令行启动这个程序的时候，可以设定一种功能（接收命令行传递的参数，来执行不同的业务逻辑
# 1.创建一个应用程序
app = QApplication(sys.argv)

# 2.控件的操作(创建控件，设置控件大小、位置、样式，事件，信号的处理...)
# 2.1 创建一个窗口
"""
当我们创建一个控件之后，如果说，这个控件没有父控件，
则把它当作是顶层控件（窗口），系统会自动给这个窗口添加一些装饰（标题栏），
窗口控件具备一些特性（设置标题、图标）
"""
window = QWidget()
# 设置窗口标题
window.setWindowTitle('面向过程的窗体')
# 设置窗口大小
window.resize(500, 500)
# 设置窗口位置
window.move(400, 200)

# 2.2 设置控件
# 控件也可以作为一个容器（承载其他的控件）
# 设置一个标签，展示在窗口内部
label = QLabel(window)  # 注意传参window,否则label不会出现在窗口上
# 设置标签里的内容
label.setText('Hello World!')
# 设置位置
label.move(200, 200)

# 2.3 展示窗口
# 刚创建好一个控件后，（这个控件没有什么父控件），默认情况下不会被展示，只有手动show一下
# 如果这个控件，有父控件的，那么一般情况下，父控件展示后，子控件会自动展示
window.show()

# 3.应用程序的执行，进入到消息循环（无限循环），否则窗口就会show一次之后消失
# 检测到整个程序所接收到的用户的交互信息
sys.exit(app.exec_())  # 退出码，0表示正常退出（自动结束或用户手动关闭），非0表示异常退出
